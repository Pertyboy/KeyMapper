name: Android CI

on:
  push:
    branches:
      - 'develop'

jobs:
  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Unit tests
        run: bash ./gradlew testDebugUnitTest

      - name: Report build status to Discord
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          title: "Unit tests"
          webhook: ${{ secrets.DISCORD_BUILD_STATUS_WEBHOOK }}

  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.1.0

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: set up Ruby for fastlane
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Make .android folder
        run: mkdir /home/runner/.android
        
      - name: Create debug keystore
        run: |
           echo "${{ secrets.CI_KEYSTORE }}" > debug.keystore.asc
           gpg -d --passphrase "${{ secrets.CI_KEYSTORE_DECRYPT }}" --batch debug.keystore.asc > /home/runner/.android/debug.keystore

      - name: Install bundle
        run: bundle install

      - name: Set Git credentials
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Build apk with fastlane
        run: bundle exec fastlane ci_alpha_apk

      - name: set apk name env
        run: echo "APK_NAME=$(basename app/build/outputs/apk/ci/*.apk .apk)" >> $GITHUB_ENV

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.APK_NAME }}
          path: app/build/outputs/apk/ci/${{ env.APK_NAME }}.apk

      - name: Upload to Discord
        uses: sinshutu/upload-to-discord@v2.0.0
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: app/build/outputs/apk/ci/${{ env.APK_NAME }}.apk

      - name: Report build status to Discord
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          title: "Build apk"
          webhook: ${{ secrets.DISCORD_BUILD_STATUS_WEBHOOK }}